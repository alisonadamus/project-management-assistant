# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - project-management-assistant

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      # - name: Create .env file
      #   run: |
      #     cat <<EOF > .env
      #     APP_NAME=${{ secrets.APP_NAME }}
      #     APP_KEY=${{ secrets.APP_KEY }}
      #     CACHE_STORE=file
      #     DB_CONNECTION=pgsql
      #     DB_HOST=${{ secrets.DB_HOST }}
      #     DB_PORT=5432
      #     DB_DATABASE=${{ secrets.DB_DATABASE }}
      #     DB_USERNAME=${{ secrets.DB_USERNAME }}
      #     DB_PASSWORD=${{ secrets.DB_PASSWORD }}
      #     EOF
  
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      # - name: Clear Laravel Cache
      #   run: |
      #     php artisan config:clear
      #     php artisan route:clear
      #     php artisan view:clear
      #     php artisan cache:clear
      - name: Generate .env file
        run: |
          cp .env.example .env

          # Оновлюємо значення для продакшн
          sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env
          sed -i 's#APP_KEY=.*#APP_KEY=${{ secrets.APP_KEY }}#' .env

          # Налаштування бази даних
          sed -i 's/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' .env

          # Генеруємо ключ та кешуємо конфігурацію
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_92F97FD18DFD416B97E3CC8FC3358F49 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5AEECB350B8F487C84807B0E76F41A47 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_FC0D83090F8849AE9F7E091797975572 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'project-management-assistant'
          slot-name: 'Production'
          package: .
          
