// Service Worker –¥–ª—è –æ–±—Ä–æ–±–∫–∏ push —Å–ø–æ–≤—ñ—â–µ–Ω—å
const CACHE_NAME = 'project-management-v1';

// –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Service Worker
self.addEventListener('install', function(event) {
    console.log('Service Worker: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    self.skipWaiting();
});

// –ê–∫—Ç–∏–≤–∞—Ü—ñ—è Service Worker
self.addEventListener('activate', function(event) {
    console.log('Service Worker: –ê–∫—Ç–∏–≤–æ–≤–∞–Ω–æ');
    event.waitUntil(self.clients.claim());
});

// –û–±—Ä–æ–±–∫–∞ push –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
self.addEventListener('push', function(event) {
    console.log('Service Worker: –û—Ç—Ä–∏–º–∞–Ω–æ push –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
    
    if (!event.data) {
        console.log('Push –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ –¥–∞–Ω–∏—Ö');
        return;
    }

    try {
        const data = event.data.json();
        console.log('Push –¥–∞–Ω—ñ:', data);

        const options = {
            body: data.body || '–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è',
            icon: data.icon || '/favicon.ico',
            badge: data.badge || '/favicon.ico',
            image: data.image,
            data: data.data || {},
            actions: data.actions || [],
            requireInteraction: data.requireInteraction || false,
            silent: data.silent || false,
            tag: data.tag || 'default',
            timestamp: Date.now(),
            vibrate: data.vibrate || [200, 100, 200],
            renotify: true
        };

        // –î–æ–¥–∞—î–º–æ –¥—ñ—ó –¥–ª—è —á–∞—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        if (data.data && data.data.type === 'new_chat_message') {
            options.actions = [
                {
                    action: 'view',
                    title: 'üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏',
                    icon: '/favicon.ico'
                },
                {
                    action: 'close',
                    title: '‚ùå –ó–∞–∫—Ä–∏—Ç–∏',
                    icon: '/favicon.ico'
                }
            ];
        }

        event.waitUntil(
            self.registration.showNotification(data.title || '–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', options)
        );

    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ push –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –±–∞–∑–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏
        event.waitUntil(
            self.registration.showNotification('–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è', {
                body: '–£ –≤–∞—Å —î –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è',
                icon: '/favicon.ico',
                badge: '/favicon.ico'
            })
        );
    }
});

// –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—ñ–≤ –ø–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
self.addEventListener('notificationclick', function(event) {
    console.log('Service Worker: –ö–ª—ñ–∫ –ø–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—é');
    
    event.notification.close();

    const data = event.notification.data;
    let urlToOpen = '/dashboard';

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ URL –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
    if (data && data.url) {
        urlToOpen = data.url;
    } else if (data && data.project_id) {
        urlToOpen = `/projects/${data.project_id}`;
    }

    // –û–±—Ä–æ–±–∫–∞ –¥—ñ–π
    if (event.action === 'view') {
        urlToOpen = data && data.url ? data.url : urlToOpen;
    } else if (event.action === 'close') {
        return; // –ü—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    }

    event.waitUntil(
        clients.matchAll({
            type: 'window',
            includeUncontrolled: true
        }).then(function(clientList) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≤–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –∑ –ø–æ—Ç—Ä—ñ–±–Ω–∏–º URL
            for (let i = 0; i < clientList.length; i++) {
                const client = clientList[i];
                if (client.url.includes(urlToOpen.split('?')[0]) && 'focus' in client) {
                    return client.focus();
                }
            }
            
            // –Ø–∫—â–æ –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –Ω–æ–≤—É
            if (clients.openWindow) {
                return clients.openWindow(urlToOpen);
            }
        })
    );
});

// –û–±—Ä–æ–±–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
self.addEventListener('notificationclose', function(event) {
    console.log('Service Worker: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
    
    // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∞–Ω–∞–ª—ñ—Ç–∏–∫—É –∞–±–æ —ñ–Ω—à—ñ –¥—ñ—ó –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ
    const data = event.notification.data;
    if (data && data.type === 'new_chat_message') {
        console.log('–ó–∞–∫—Ä–∏—Ç–æ —á–∞—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç—É:', data.project_id);
    }
});

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
self.addEventListener('error', function(event) {
    console.error('Service Worker –ø–æ–º–∏–ª–∫–∞:', event.error);
});

// –û–±—Ä–æ–±–∫–∞ –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ Promise
self.addEventListener('unhandledrejection', function(event) {
    console.error('Service Worker –Ω–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞ Promise:', event.reason);
});
